//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by GWBas2CS.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.IO;

internal sealed class adventure
{
    private readonly TextReader input;
    private readonly TextWriter output;
    private Queue DATA;
    private string[] R_sa;
    private string[] OB_sa;
    private string[] O2_sa;
    private string[] DI_sa;
    private float[] OB_na;
    private float[, ] MA_na;
    private string CM_s;
    private string V_s;
    private string N_s;
    private string W_s;
    private string QU_s;
    private float NR_n;
    private float NO_n;
    private float ND_n;
    private float NI_n;
    private float R_n;
    private float IN_n;
    private float SF_n;
    private float FF_n;
    private float MX_n;
    private float GF_n;
    private float C_n;
    private float I_n;
    private float FL_n;
    private float RO_n;
    private float DI_n;
    private float O_n;
    private float J_n;
    private float A_n;
    public adventure(TextReader input, TextWriter output)
    {
        this.input = (input);
        this.output = (output);
    }

    public void Run()
    {
        while ((this.Main()) == (1))
        {
        }
    }

    private void Init()
    {
        DATA = (new Queue());
        DATA.Enqueue((float)(4));
        DATA.Enqueue((float)(3));
        DATA.Enqueue((float)(2));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(1));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(1));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(1));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(5));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(4));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(9));
        DATA.Enqueue((float)(7));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(6));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(7));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(6));
        DATA.Enqueue((float)(10));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(11));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(9));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(10));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(12));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(11));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(15));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(16));
        DATA.Enqueue((float)(14));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(128));
        DATA.Enqueue((float)(15));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(18));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(17));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(0));
        DATA.Enqueue((float)(8));
        DATA.Enqueue("AN OLD DIARY");
        DATA.Enqueue("DIA");
        DATA.Enqueue((float)(1));
        DATA.Enqueue("A SMALL BOX");
        DATA.Enqueue("BOX");
        DATA.Enqueue((float)(1));
        DATA.Enqueue("CABINET");
        DATA.Enqueue("CAB");
        DATA.Enqueue((float)(130));
        DATA.Enqueue("A SALT SHAKER");
        DATA.Enqueue("SAL");
        DATA.Enqueue((float)(0));
        DATA.Enqueue("A DICTIONARY");
        DATA.Enqueue("DIC");
        DATA.Enqueue((float)(3));
        DATA.Enqueue("WOODEN BARREL");
        DATA.Enqueue("BAR");
        DATA.Enqueue((float)(133));
        DATA.Enqueue("A SMALL BOTTLE");
        DATA.Enqueue("BOT");
        DATA.Enqueue((float)(0));
        DATA.Enqueue("A LADDER");
        DATA.Enqueue("LAD");
        DATA.Enqueue((float)(4));
        DATA.Enqueue("A SHOVEL");
        DATA.Enqueue("SHO");
        DATA.Enqueue((float)(5));
        DATA.Enqueue("A TREE");
        DATA.Enqueue("TRE");
        DATA.Enqueue((float)(135));
        DATA.Enqueue("A GOLDEN SWORD");
        DATA.Enqueue("SWO");
        DATA.Enqueue((float)(0));
        DATA.Enqueue("A WOODEN BOAT");
        DATA.Enqueue("BOA");
        DATA.Enqueue((float)(140));
        DATA.Enqueue("A MAGIC FAN");
        DATA.Enqueue("FAN");
        DATA.Enqueue((float)(8));
        DATA.Enqueue("A NASTY-LOOKING GUARD");
        DATA.Enqueue("GUA");
        DATA.Enqueue((float)(144));
        DATA.Enqueue("A GLASS CASE");
        DATA.Enqueue("CAS");
        DATA.Enqueue((float)(146));
        DATA.Enqueue("A GLOWING RUBY");
        DATA.Enqueue("RUB");
        DATA.Enqueue((float)(0));
        DATA.Enqueue("A PAIR OF RUBBER GLOVES");
        DATA.Enqueue("GLO");
        DATA.Enqueue((float)(19));
        CM_s = ("");
        V_s = ("");
        N_s = ("");
        W_s = ("");
        QU_s = ("");
        NR_n = (0);
        NO_n = (0);
        ND_n = (0);
        NI_n = (0);
        R_n = (0);
        IN_n = (0);
        SF_n = (0);
        FF_n = (0);
        MX_n = (0);
        GF_n = (0);
        C_n = (0);
        I_n = (0);
        FL_n = (0);
        RO_n = (0);
        DI_n = (0);
        O_n = (0);
        J_n = (0);
        A_n = (0);
        R_sa = (new string[11]);
        OB_sa = (new string[11]);
        O2_sa = (new string[11]);
        DI_sa = (new string[11]);
        OB_na = (new float[11]);
    }

    private void CLS()
    {
        this.output.Write('\f');
        Console.Clear();
    }

    private void DIM1_sa(out string[] a, int d1)
    {
        a = (new string[(d1) + (1)]);
        Array.Fill(a, "");
    }

    private void DIM1_na(out float[] a, int d1)
    {
        a = (new float[(d1) + (1)]);
    }

    private void DIM2_na(out float[, ] a, int d1, int d2)
    {
        a = (new float[(d1) + (1), (d2) + (1)]);
    }

    private void PRINT(string expression)
    {
        this.output.WriteLine(expression);
    }

    private string INPUT_s(string prompt)
    {
        this.output.Write((prompt) + ("? "));
        string v = this.input.ReadLine();
        return v.Trim();
    }

    private string MID_s(string x, int n, int m)
    {
        if ((n) > (x.Length))
        {
            return "";
        }

        int l = ((x.Length) - (n)) + (1);
        if ((m) > (l))
        {
            m = (l);
        }

        return x.Substring((n) - (1), m);
    }

    private string LEFT_s(string x, int n)
    {
        if ((n) > (x.Length))
        {
            return x;
        }

        return x.Substring(0, n);
    }

    private void PRINT_n(string expression)
    {
        this.output.Write(expression);
    }

    private float READ_n()
    {
        return (float)(DATA.Dequeue());
    }

    private string READ_s()
    {
        return (string)(DATA.Dequeue());
    }

    private float INPUT_n(string prompt)
    {
        while (true)
        {
            this.output.Write((prompt) + ("? "));
            string v = this.input.ReadLine();
            v = (v.Trim());
            if ((v.Length) == (0))
            {
                return 0;
            }

            float r;
            if (float.TryParse(v, out r))
            {
                return r;
            }

            this.output.WriteLine("?Redo from start");
        }
    }

    private int Sub_500()
    {
        PRINT_n(("") + ("YOU CAN GO: "));
        I_n = (0);
        while ((I_n) <= (5))
        {
            if ((((MA_na[(int)(R_n), (int)(I_n)].CompareTo(0)) > (0)) ? (-1) : (0)) != (0))
            {
                PRINT_n((("") + (DI_sa[(int)(I_n)])) + (" "));
            }

            I_n = ((I_n) + (1));
        }

        PRINT("");
        return 0;
    }

    private int Sub_600()
    {
        PRINT(("") + ("YOU CAN SEE: "));
        FL_n = (0);
        I_n = (0);
        while ((I_n) <= ((NO_n) - (1)))
        {
            if ((((R_n.CompareTo(((int)(OB_na[(int)(I_n)])) & ((int)(127)))) == (0)) ? (-1) : (0)) != (0))
            {
                PRINT((("") + (" ")) + (OB_sa[(int)(I_n)]));
                FL_n = (1);
            }

            I_n = ((I_n) + (1));
        }

        if ((((FL_n.CompareTo(0)) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + (" NOTHING OF INTEREST"));
        }

        return 0;
    }

    private int Sub_700()
    {
        PRINT("");
        PRINT((("") + ("YOU ARE ")) + (R_sa[(int)(R_n)]));
        return 0;
    }

    private int Sub_1000()
    {
        if ((((NO_n.CompareTo(0)) == (0)) ? (-1) : (0)) != (0))
        {
            return 0;
        }

        I_n = (0);
        while ((I_n) <= ((NO_n) - (1)))
        {
            if ((((O2_sa[(int)(I_n)].CompareTo(N_s)) == (0)) ? (-1) : (0)) != (0))
            {
                FL_n = (1);
                RO_n = (OB_na[(int)(I_n)]);
                goto L1050;
            }

            I_n = ((I_n) + (1));
        }

        FL_n = (0);
        return 0;
        L1050:
            ;
        RO_n = (OB_na[(int)(I_n)]);
        if ((((RO_n.CompareTo(127)) > (0)) ? (-1) : (0)) != (0))
        {
            RO_n = ((RO_n) - (128));
        }

        return 0;
    }

    private int Sub_25000()
    {
        if ((((NR_n.CompareTo(0)) == (0)) ? (-1) : (0)) != (0))
        {
            return 0;
        }

        DI_sa[(int)(0)] = ("NORTH");
        DI_sa[(int)(1)] = ("SOUTH");
        DI_sa[(int)(2)] = ("EAST");
        DI_sa[(int)(3)] = ("WEST");
        DI_sa[(int)(4)] = ("UP");
        DI_sa[(int)(5)] = ("DOWN");
        I_n = (1);
        while ((I_n) <= (NR_n))
        {
            J_n = (0);
            while ((J_n) <= ((ND_n) - (1)))
            {
                MA_na[(int)(I_n), (int)(J_n)] = (READ_n());
                J_n = ((J_n) + (1));
            }

            I_n = ((I_n) + (1));
        }

        return 0;
    }

    private int Sub_26000()
    {
        if ((((NO_n.CompareTo(0)) == (0)) ? (-1) : (0)) != (0))
        {
            return 0;
        }

        I_n = (0);
        while ((I_n) <= ((NO_n) - (1)))
        {
            OB_sa[(int)(I_n)] = (READ_s());
            O2_sa[(int)(I_n)] = (READ_s());
            OB_na[(int)(I_n)] = (READ_n());
            I_n = ((I_n) + (1));
        }

        return 0;
    }

    private int Sub_27000()
    {
        R_sa[(int)(1)] = ("IN YOUR LIVING ROOM.");
        R_sa[(int)(2)] = ("IN THE KITCHEN.");
        R_sa[(int)(3)] = ("IN THE LIBRARY.");
        R_sa[(int)(4)] = ("IN THE FRONT YARD.");
        R_sa[(int)(5)] = ("IN THE GARAGE.");
        R_sa[(int)(6)] = ("IN AN OPEN FIELD.");
        R_sa[(int)(7)] = ("AT THE EDGE OF A FOREST.");
        R_sa[(int)(8)] = ("ON A BRANCH OF A TREE.");
        R_sa[(int)(9)] = ("ON A LONG, WINDING ROAD.");
        R_sa[(int)(10)] = ("ON A LONG, WINDING ROAD.");
        R_sa[(int)(11)] = ("ON A LONG, WINDING ROAD.");
        R_sa[(int)(12)] = ("ON THE SOUTH BANK OF A RIVER.");
        R_sa[(int)(13)] = ("INSIDE THE WOODEN BOAT.");
        R_sa[(int)(14)] = ("ON THE NORTH BANK OF A RIVER.");
        R_sa[(int)(15)] = ("ON A WELL-TRAVELED ROAD.");
        R_sa[(int)(16)] = ("IN FRONT OF A LARGE CASTLE.");
        R_sa[(int)(17)] = ("IN A NARROW HALL.");
        R_sa[(int)(18)] = ("IN A LARGE HALL.");
        R_sa[(int)(19)] = ("ON THE TOP OF A TREE.");
        return 0;
    }

    private int Sub_30000()
    {
        PRINT(("") + ("ALL YOUR LIFE YOU HAD HEARD THE STORIES"));
        PRINT(("") + ("ABOUT YOUR CRAZY UNCLE SIMON. HE WAS AN"));
        PRINT(("") + ("INVENTOR, WHO KEPT DISAPPEARING FOR"));
        PRINT(("") + ("LONG PERIODS OF TIME, NEVER TELLING"));
        PRINT(("") + ("ANYONE WHERE HE HAD BEEN."));
        PRINT("");
        PRINT(("") + ("YOU NEVER BELIEVED THE STORIES, BUT"));
        PRINT(("") + ("WHEN YOUR UNCLE DIED AND LEFT YOU HIS"));
        PRINT(("") + ("DIARY, YOU LEARNED THAT THEY WERE TRUE."));
        PRINT(("") + ("YOUR UNCLE HAD DISCOVERED A MAGIC"));
        PRINT(("") + ("LAND, AND A SECRET FORMULA THAT COULD"));
        PRINT(("") + ("TAKE HIM THERE. IN THAT LAND WAS A"));
        PRINT(("") + ("MAGIC RUBY, AND HIS DIARY CONTAINED"));
        PRINT(("") + ("THE INSTRUCTIONS FOR GOING THERE TO"));
        PRINT(("") + ("FIND IT."));
        A_n = (INPUT_n(""));
        return 0;
    }

    private int Main()
    {
        this.Init();
        ; // ** THE QUEST **
        ; // **
        ; // ** An adventure game
        ; // 
        CLS() // Put a statement here to clear the screen. If you are using a Radio Shack Model I, III, or 4, add a CLEAR statement. (See text.)
        ;
        NR_n = (19);
        NO_n = (17);
        ND_n = (6);
        NI_n = (5);
        DIM1_sa(out R_sa, (int)(NR_n));
        DIM1_na(out OB_na, (int)(NO_n));
        DIM1_sa(out OB_sa, (int)(NO_n));
        DIM1_sa(out O2_sa, (int)(NO_n));
        DIM2_na(out MA_na, (int)(NR_n), (int)(ND_n));
        PRINT(("") + ("Please stand by .... "));
        PRINT("");
        PRINT("");
        switch (Sub_25000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        switch (Sub_26000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        switch (Sub_27000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        } // initialize arrays

        R_n = (1);
        IN_n = (0);
        SF_n = (0);
        FF_n = (0);
        MX_n = (1);
        GF_n = (0);
        switch (Sub_30000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        } // Execute introductory sequence, if any.

        CLS() // Put a statement here to clear the screen.
        ;
        L90:
            ;
        switch (Sub_700())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        switch (Sub_500())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        switch (Sub_600())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        ; // 
        ; // *** PARSER
        ; // 
        L100:
            ;
        PRINT("");
        CM_s = ("");
        CM_s = (INPUT_s("WHAT NOW"));
        if ((((CM_s.CompareTo("")) == (0)) ? (-1) : (0)) != (0))
        {
            goto L100;
        }

        C_n = (0);
        V_s = ("");
        N_s = ("");
        L120:
            ;
        C_n = ((C_n) + (1));
        if ((((C_n.CompareTo(CM_s.Length)) > (0)) ? (-1) : (0)) != (0))
        {
            goto L150;
        }

        W_s = (MID_s(CM_s, (int)(C_n), (int)(1)));
        if ((((W_s.CompareTo(" ")) == (0)) ? (-1) : (0)) != (0))
        {
            goto L150;
        }

        V_s = ((V_s) + (W_s));
        goto L120;
        L150:
            ;
        C_n = ((C_n) + (1));
        if ((((C_n.CompareTo(CM_s.Length)) > (0)) ? (-1) : (0)) != (0))
        {
            goto L180;
        }

        W_s = (MID_s(CM_s, (int)(C_n), (int)(1)));
        if ((((W_s.CompareTo(" ")) == (0)) ? (-1) : (0)) != (0))
        {
            goto L180;
        }

        N_s = ((N_s) + (W_s));
        goto L150;
        L180:
            ;
        if ((((V_s.CompareTo("")) == (0)) ? (-1) : (0)) != (0))
        {
            goto L100;
        }

        if ((((V_s.Length.CompareTo(3)) > (0)) ? (-1) : (0)) != (0))
        {
            V_s = (LEFT_s(V_s, (int)(3)));
        }

        if ((((N_s.Length.CompareTo(3)) > (0)) ? (-1) : (0)) != (0))
        {
            N_s = (LEFT_s(N_s, (int)(3)));
        }

        if ((((N_s.CompareTo("SHA")) == (0)) ? (-1) : (0)) != (0))
        {
            N_s = ("SAL");
        }

        if ((((N_s.CompareTo("FOR")) == (0)) ? (-1) : (0)) != (0))
        {
            N_s = ("BOT");
        }

        ; // 
        ; // 
        goto L2000; // Execute verb routines.
        ; // 
        ; // *** DIRECTIONS
        ; // 
        ; // 
        ; // 
        ; // 
        ; // ** ROOM DESCRIPTION
        ; // 
        ; // 
        ; // Routine for the verb 'GO'.
        ; // 
        L2000:
            ;
        if ((((V_s.CompareTo("GO")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L2500;
        }

        if ((((N_s.CompareTo("NOR")) == (0)) ? (-1) : (0)) != (0))
        {
            DI_n = (0);
            goto L2400;
        }

        if ((((N_s.CompareTo("SOU")) == (0)) ? (-1) : (0)) != (0))
        {
            DI_n = (1);
            goto L2400;
        }

        if ((((N_s.CompareTo("EAS")) == (0)) ? (-1) : (0)) != (0))
        {
            DI_n = (2);
            goto L2400;
        }

        if ((((N_s.CompareTo("WES")) == (0)) ? (-1) : (0)) != (0))
        {
            DI_n = (3);
            goto L2400;
        }

        if ((((N_s.CompareTo("UP")) == (0)) ? (-1) : (0)) != (0))
        {
            DI_n = (4);
            goto L2400;
        }

        if ((((N_s.CompareTo("DOW")) == (0)) ? (-1) : (0)) != (0))
        {
            DI_n = (5);
            goto L2400;
        }

        if ((((int)(((N_s.CompareTo("BOA")) == (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(11)].CompareTo((R_n) + (128))) == (0)) ? (-1) : (0)))) != (0))
        {
            R_n = (13);
            goto L90;
        }

        L2390:
            ;
        PRINT(("") + ("YOU CAN'T GO THERE!"));
        goto L100;
        ; // 
        ; // 
        L2400:
            ;
        if ((((int)(((MA_na[(int)(R_n), (int)(DI_n)].CompareTo(0)) > (0)) ? (-1) : (0))) & ((int)(((MA_na[(int)(R_n), (int)(DI_n)].CompareTo(128)) < (0)) ? (-1) : (0)))) != (0))
        {
            R_n = (MA_na[(int)(R_n), (int)(DI_n)]);
            goto L90;
        }

        ; // 
        if ((((MA_na[(int)(R_n), (int)(DI_n)].CompareTo(128)) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THE GUARD WON'T LET YOU!"));
            goto L100;
        }

        goto L2390;
        ; // 
        ; // *** 'GET' ROUTINE
        L2500:
            ;
        if ((((int)(((V_s.CompareTo("GET")) != (0)) ? (-1) : (0))) & ((int)(((V_s.CompareTo("TAK")) != (0)) ? (-1) : (0)))) != (0))
        {
            goto L2600;
        }

        switch (Sub_1000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        if ((((FL_n.CompareTo(0)) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T GET THAT!"));
            goto L100;
        }

        if ((((RO_n.CompareTo(-(1))) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU ALREADY HAVE IT!"));
            goto L100;
        }

        if ((((OB_na[(int)(I_n)].CompareTo(127)) > (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T GET THAT!"));
            goto L100;
        }

        if ((((RO_n.CompareTo(R_n)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THAT'S NOT HERE!"));
            goto L100;
        }

        if ((((IN_n.CompareTo(NI_n)) > (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T CARRY ANY MORE."));
            goto L100;
        }

        if ((((int)(((R_n.CompareTo(18)) == (0)) ? (-1) : (0))) & ((int)(((N_s.CompareTo("RUB")) == (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("CONGRATULATIONS! YOU'VE WON!"));
            goto L3430;
        }

        IN_n = ((IN_n) + (1));
        OB_na[(int)(I_n)] = (-(1));
        PRINT(("") + ("TAKEN."));
        goto L100;
        ; // *** 'DROP' ROUTINE
        L2600:
            ;
        if ((((int)(((V_s.CompareTo("DRO")) != (0)) ? (-1) : (0))) & ((int)(((V_s.CompareTo("THR")) != (0)) ? (-1) : (0)))) != (0))
        {
            goto L2700;
        }

        switch (Sub_1000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        if ((((int)(((FL_n.CompareTo(0)) == (0)) ? (-1) : (0))) | ((int)(((RO_n.CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE THAT!"));
            goto L100;
        }

        IN_n = ((IN_n) - (1));
        OB_na[(int)(I_n)] = (R_n);
        PRINT(("") + ("DROPPED."));
        goto L100;
        ; // *** 'INVENTORY' ROUTINE
        L2700:
            ;
        if ((((int)(((V_s.CompareTo("INV")) != (0)) ? (-1) : (0))) & ((int)(((V_s.CompareTo("I")) != (0)) ? (-1) : (0)))) != (0))
        {
            goto L2800;
        }

        FL_n = (0);
        PRINT(("") + ("YOU ARE CARRYING:"));
        I_n = (0);
        while ((I_n) <= ((NO_n) - (1)))
        {
            if ((((OB_na[(int)(I_n)].CompareTo(-(1))) == (0)) ? (-1) : (0)) != (0))
            {
                PRINT((("") + (" ")) + (OB_sa[(int)(I_n)]));
                FL_n = (1);
            }

            I_n = ((I_n) + (1));
        }

        if ((((FL_n.CompareTo(0)) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + (" NOTHING"));
        }

        goto L100;
        ; // *** 'LOOK' ROUTINE
        L2800:
            ;
        if ((((int)(((V_s.CompareTo("LOO")) != (0)) ? (-1) : (0))) & ((int)(((V_s.CompareTo("L")) != (0)) ? (-1) : (0)))) != (0))
        {
            goto L2900;
        }

        if ((((N_s.CompareTo("")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L2910;
        }

        goto L90;
        ; // *** 'EXAMINE' ROUTINE
        L2900:
            ;
        if ((((V_s.CompareTo("EXA")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3400;
        }

        L2910:
            ;
        if ((((N_s.CompareTo("GRO")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L2940;
        }

        if ((((R_n.CompareTo(6)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("IT LOOKS LIKE GROUND!"));
            goto L100;
        }

        PRINT(("") + ("IT LOOKS LIKE SOMETHING'S BURIED HERE."));
        goto L100;
        L2940:
            ;
        ; // 
        switch (Sub_1000())
        {
            case 1:
                return 1;
            case 2:
                return 2;
        }

        if ((((int)(((RO_n.CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((RO_n.CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("IT'S NOT HERE!"));
            goto L100;
        }

        if ((((N_s.CompareTo("BOT")) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S SOMETHING WRITTEN ON IT!"));
            goto L100;
        }

        if ((((N_s.CompareTo("CAS")) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S A JEWEL INSIDE!"));
            goto L100;
        }

        if ((((N_s.CompareTo("BAR")) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("IT'S FILLED WITH RAINWATER."));
            goto L100;
        }

        PRINT(("") + ("YOU SEE NOTHING UNUSUAL."));
        goto L100;
        L3400:
            ;
        if ((((V_s.CompareTo("QUI")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3500;
        }

        PRINT_n(("") + ("ARE YOU SURE YOU WANT TO QUIT (Y/N)"));
        QU_s = (INPUT_s(""));
        if ((((QU_s.CompareTo("N")) == (0)) ? (-1) : (0)) != (0))
        {
            goto L100;
        }

        L3430:
            ;
        PRINT_n(("") + ("WOULD YOU LIKE TO PLAY AGAIN (Y/N)"));
        QU_s = (INPUT_s(""));
        if ((((QU_s.CompareTo("Y")) == (0)) ? (-1) : (0)) != (0))
        {
            return 1;
        }

        if ((((QU_s.CompareTo("N")) == (0)) ? (-1) : (0)) != (0))
        {
            return 2;
        }

        goto L3430;
        L3500:
            ;
        if ((((V_s.CompareTo("REA")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3700;
        }

        if ((((N_s.CompareTo("DIA")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3560;
        }

        if ((((int)(((OB_na[(int)(0)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(0)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("THERE'S NO DIARY HERE!"));
            goto L100;
        }

        PRINT(("") + ("IT SAYS: 'ADD SODIUM CHLORIDE PLUS THE"));
        PRINT(("") + ("FORMULA TO RAINWATER, TO REACH THE"));
        PRINT(("") + ("OTHER WORLD.' "));
        goto L100;
        L3560:
            ;
        if ((((N_s.CompareTo("DIC")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3590;
        }

        if ((((int)(((OB_na[(int)(4)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(4)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T SEE A DICTIONARY!"));
            goto L100;
        }

        PRINT(("") + ("IT SAYS: SODIUM CHLORIDE IS"));
        PRINT(("") + ("COMMON TABLE SALT."));
        goto L100;
        L3590:
            ;
        if ((((N_s.CompareTo("BOT")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3620;
        }

        if ((((int)(((OB_na[(int)(6)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(6)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("THERE'S NO BOTTLE HERE!"));
            goto L100;
        }

        PRINT(("") + ("IT READS: 'SECRET FORMULA'."));
        goto L100;
        L3620:
            ;
        ; // 
        PRINT(("") + ("YOU CAN'T READ THAT!"));
        goto L100;
        L3700:
            ;
        if ((((V_s.CompareTo("OPE")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3900;
        }

        if ((((N_s.CompareTo("BOX")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3740;
        }

        if ((((int)(((OB_na[(int)(1)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(1)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("THERE'S NO BOX HERE!"));
            goto L100;
        }

        OB_na[(int)(6)] = (R_n);
        PRINT(("") + ("SOMETHING FELL OUT!"));
        goto L100;
        L3740:
            ;
        if ((((N_s.CompareTo("CAB")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3770;
        }

        if ((((R_n.CompareTo(2)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S NO CABINET HERE!"));
            goto L100;
        }

        PRINT(("") + ("THERE'S SOMETHING INSIDE!"));
        OB_na[(int)(3)] = (2);
        goto L100;
        L3770:
            ;
        if ((((N_s.CompareTo("CAS")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3890;
        }

        if ((((R_n.CompareTo(18)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S NO CASE HERE!"));
            goto L100;
        }

        if ((((GF_n.CompareTo(1)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THE CASE IS ELECTRIFIED!"));
            goto L100;
        }

        PRINT(("") + ("THE GLOVES INSULATE AGAINST THE"));
        PRINT(("") + ("ELECTRICITY! THE CASE OPENS!"));
        OB_na[(int)(15)] = (18);
        goto L100;
        L3890:
            ;
        PRINT(("") + ("YOU CAN'T OPEN THAT!"));
        goto L100;
        L3900:
            ;
        if ((((V_s.CompareTo("POU")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4100;
        }

        if ((((N_s.CompareTo("SAL")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L3960;
        }

        if ((((int)(((OB_na[(int)(3)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(3)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE THE SALT!"));
            goto L100;
        }

        if ((((SF_n.CompareTo(1)) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THE SHAKER IS EMPTY!"));
            goto L100;
        }

        if ((((R_n.CompareTo(5)) == (0)) ? (-1) : (0)) != (0))
        {
            MX_n = ((MX_n) + (1));
        }

        SF_n = (1);
        PRINT(("") + ("POURED!"));
        goto L4010;
        L3960:
            ;
        if ((((N_s.CompareTo("BOT")) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T POUR THAT!"));
            goto L100;
        }

        if ((((int)(((OB_na[(int)(6)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(3)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE THE BOTTLE!"));
            goto L100;
        }

        if ((((FF_n.CompareTo(1)) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THE BOTTLE IS EMPTY!"));
            goto L100;
        }

        if ((((R_n.CompareTo(5)) == (0)) ? (-1) : (0)) != (0))
        {
            MX_n = ((MX_n) + (1));
        }

        FF_n = (1);
        PRINT(("") + ("POURED!"));
        L4010:
            ;
        if ((((MX_n.CompareTo(3)) < (0)) ? (-1) : (0)) != (0))
        {
            goto L100;
        }

        PRINT(("") + ("THERE IS AN EXPLOSION!"));
        PRINT(("") + ("EVERYTHING GOES BLACK!"));
        PRINT(("") + ("SUDDENLY YOU ARE ... "));
        PRINT(("") + (" ... SOMEWHERE ELSE!"));
        R_n = (6);
        goto L90;
        L4100:
            ;
        if ((((V_s.CompareTo("CLI")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4300;
        }

        if ((((N_s.CompareTo("TRE")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4140;
        }

        if ((((R_n.CompareTo(7)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S NO TREE HERE!"));
            goto L100;
        }

        PRINT(("") + ("YOU CAN'T REACH THE BRANCHES!"));
        goto L100;
        L4140:
            ;
        if ((((N_s.CompareTo("LAD")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4290;
        }

        if ((((int)(((OB_na[(int)(7)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(7)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE THE LADDER!"));
            goto L100;
        }

        if ((((R_n.CompareTo(7)) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4180;
        }

        PRINT(("") + ("THE LADDER SINKS UNDER YOUR WEIGHT!"));
        PRINT(("") + ("IT DISAPPEARS INTO THE GROUND!"));
        OB_na[(int)(7)] = (0);
        goto L100;
        L4180:
            ;
        PRINT(("") + ("WHATEVER FOR?"));
        goto L100;
        L4290:
            ;
        PRINT(("") + ("IT WON'T DO ANY GOOD."));
        goto L100;
        L4300:
            ;
        if ((((V_s.CompareTo("JUM")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4400;
        }

        if ((((int)(((R_n.CompareTo(7)) != (0)) ? (-1) : (0))) & ((int)(((R_n.CompareTo(8)) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("WHEE! THAT WAS FUN!"));
            goto L100;
        }

        if ((((R_n.CompareTo(8)) == (0)) ? (-1) : (0)) != (0))
        {
            goto L4350;
        }

        PRINT(("") + ("YOU GRAB THE LOWEST BRANCH OF THE"));
        PRINT(("") + ("TREE AND PULL YOURSELF UP...."));
        R_n = (8);
        goto L90;
        L4350:
            ;
        PRINT(("") + ("YOU GRAB A HIGHER BRANCH ON THE"));
        PRINT(("") + ("TREE AND PULL YOURSELF UP...."));
        R_n = (19);
        goto L90;
        L4400:
            ;
        if ((((V_s.CompareTo("DIG")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4500;
        }

        if ((((int)(((int)(((N_s.CompareTo("HOL")) != (0)) ? (-1) : (0))) & ((int)(((N_s.CompareTo("GRO")) != (0)) ? (-1) : (0))))) & ((int)(((N_s.CompareTo("")) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU CAN'T DIG THAT!"));
            goto L100;
        }

        if ((((int)(((OB_na[(int)(8)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(8)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE A SHOVEL!"));
            goto L100;
        }

        if ((((R_n.CompareTo(6)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU DON'T FIND ANYTHING."));
            goto L100;
        }

        if ((((OB_na[(int)(10)].CompareTo(0)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S NOTHING ELSE THERE!"));
            goto L100;
        }

        PRINT(("") + ("THERE'S SOMETHING THERE!"));
        OB_na[(int)(10)] = (6);
        goto L100;
        L4500:
            ;
        if ((((V_s.CompareTo("ROW")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4600;
        }

        if ((((int)(((N_s.CompareTo("BOA")) != (0)) ? (-1) : (0))) & ((int)(((N_s.CompareTo("")) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("HOW CAN YOU ROW THAT?"));
            goto L100;
        }

        if ((((R_n.CompareTo(13)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU'RE NOT IN THE BOAT!"));
            goto L100;
        }

        PRINT(("") + ("YOU DON'T HAVE AN OAR!"));
        goto L100;
        L4600:
            ;
        if ((((V_s.CompareTo("WAV")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4700;
        }

        if ((((N_s.CompareTo("FAN")) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T WAVE THAT!"));
            goto L100;
        }

        if ((((int)(((OB_na[(int)(12)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(12)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE THE FAN!"));
            goto L100;
        }

        if ((((R_n.CompareTo(13)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU FEEL A REFRESHING BREEZE!"));
            goto L100;
        }

        PRINT(("") + ("A POWERFUL BREEZE PROPELS THE BOAT"));
        PRINT(("") + ("TO THE OPPOSITE SHORE!"));
        if ((((OB_na[(int)(11)].CompareTo(140)) == (0)) ? (-1) : (0)) != (0))
        {
            OB_na[(int)(11)] = (142);
            goto L100;
        }

        OB_na[(int)(11)] = (140);
        goto L100;
        L4700:
            ;
        if ((((int)(((V_s.CompareTo("LEA")) != (0)) ? (-1) : (0))) & ((int)(((V_s.CompareTo("EXI")) != (0)) ? (-1) : (0)))) != (0))
        {
            goto L4800;
        }

        if ((((R_n.CompareTo(13)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("PLEASE GIVE A DIRECTION!"));
            goto L100;
        }

        if ((((int)(((N_s.CompareTo("BOA")) != (0)) ? (-1) : (0))) & ((int)(((N_s.CompareTo("")) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("HUH?"));
            goto L100;
        }

        R_n = ((OB_na[(int)(11)]) - (128));
        goto L90;
        L4800:
            ;
        if ((((V_s.CompareTo("FIG")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L4900;
        }

        if ((((N_s.CompareTo("")) == (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("WHOM DO YOU WANT TO FIGHT?"));
            goto L100;
        }

        if ((((N_s.CompareTo("GUA")) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T FIGHT HIM!"));
            goto L100;
        }

        if ((((R_n.CompareTo(16)) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("THERE'S NO GUARD HERE!"));
            goto L100;
        }

        if ((((OB_na[(int)(10)].CompareTo(-(1))) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE A WEAPON!"));
            goto L100;
        }

        PRINT(("") + ("THE GUARD, NOTICING YOUR SWORD,"));
        PRINT(("") + ("WISELY RETREATS INTO THE CASTLE."));
        MA_na[(int)(16), (int)(O_n)] = (17);
        OB_na[(int)(13)] = (0);
        goto L100;
        L4900:
            ;
        if ((((V_s.CompareTo("WEA")) != (0)) ? (-1) : (0)) != (0))
        {
            goto L5000;
        }

        if ((((N_s.CompareTo("GLO")) != (0)) ? (-1) : (0)) != (0))
        {
            PRINT(("") + ("YOU CAN'T WEAR THAT!"));
            goto L100;
        }

        if ((((int)(((OB_na[(int)(16)].CompareTo(R_n)) != (0)) ? (-1) : (0))) & ((int)(((OB_na[(int)(16)].CompareTo(-(1))) != (0)) ? (-1) : (0)))) != (0))
        {
            PRINT(("") + ("YOU DON'T HAVE THE GLOVES."));
            goto L100;
        }

        PRINT(("") + ("YOU ARE NOW WEARING THE GLOVES."));
        GF_n = (1);
        goto L100;
        L5000:
            ;
        ; // 
        PRINT(("") + ("I DON'T KNOW HOW TO DO THAT"));
        goto L100;
        ; // 
        ; // The following routine reads the map data into
        ; // the map array, MA(ROOM, DIRECTION).
        ; // 
        ; // 
        ; // LIVING ROOM
        ; // KITCHEN
        ; // LIBRARY
        ; // FRONT YARD
        ; // GARAGE
        ; // OPEN FIELD
        ; // EDGE OF FOREST
        ; // BRANCH OF TREE
        ; // LONG, WINDING ROAD (1)
        ; // LONG, WINDING ROAD (2)
        ; // LONG, WINDING ROAD (3)
        ; // SOUTH BANK OF RIVER
        ; // BOAT
        ; // NORTH BANK OF RIVER
        ; // WELL-TRAVELED ROAD
        ; // SOUTH OF CASTLE
        ; // NARROW HALL
        ; // LARGE HALL
        ; // TOP OF TREE
        ; // 
        ; // The following subroutine reads the object data
        ; // into the three object arrays, OB(X), OB$(X), and
        ; // O2$(X).
        ; // 
        ; // 
        ; // OBJECT #0
        ; // OBJECT #1
        ; // OBJECT #2
        ; // OBJECT #3
        ; // OBJECT #4
        ; // OBJECT #5
        ; // OBJECT #6
        ; // OBJECT #7
        ; // OBJECT #8
        ; // OBJECT #9
        ; // OBJECT #10
        ; // OBJECT #11
        ; // OBJECT #12
        ; // OBJECT #13
        ; // OBJECT #14
        ; // OBJECT #15
        ; // OBJECT #17
        ; // 
        ; // 
#pragma warning disable CS0162 // Unreachable code detected
        return 2;
#pragma warning restore CS0162 // Unreachable code detected
    }
}