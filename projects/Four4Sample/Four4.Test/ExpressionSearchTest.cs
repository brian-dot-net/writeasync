// <copyright file="ExpressionSearchTest.cs" company="Brian Rogers">
// Copyright (c) Brian Rogers. All rights reserved.
// </copyright>

namespace Four4.Test
{
    using System;
    using System.Collections.Generic;
    using FluentAssertions;
    using Xunit;

    public sealed class ExpressionSearchTest
    {
        [Fact]
        public void OneOperandAndOneBinaryOperator()
        {
            const string Expected = @"4
4 4 +
4 4 + 4 +
4 4 + 4 + 4 +
4 4 + 4 4 + +
4 4 4 + +
4 4 4 + + 4 +
4 4 4 + 4 + +
4 4 4 4 + + +";

            ExpressionSearch search = new ExpressionSearch();
            search.AddOperand("4");
            search.AddBinary("+");

            TestSearch(search, Expected);
        }

        [Fact]
        public void OneOperandAndOneUnaryOperator()
        {
            const string Expected = @"4
4 R";

            ExpressionSearch search = new ExpressionSearch();
            search.AddOperand("4");
            search.AddUnary("R");

            TestSearch(search, Expected);
        }

        [Fact]
        public void OneOperandAndOneUnaryOperator2()
        {
            const string Expected = @"4
4 !";

            ExpressionSearch search = new ExpressionSearch();
            search.AddOperand("4");
            search.AddUnary("!");

            TestSearch(search, Expected);
        }

        [Fact]
        public void TwoOperandsAndTwoOperatorsBinaryAndUnary()
        {
            const string Expected = @".4
.4 .4 .4 .4 + + +
.4 .4 .4 + .4 + +
.4 .4 .4 + +
.4 .4 .4 + + .4 +
.4 .4 .4 + + 4 +
.4 .4 .4 + + 4 R +
.4 .4 .4 + 4 + +
.4 .4 .4 + 4 R + +
.4 .4 .4 4 + + +
.4 .4 .4 4 R + + +
.4 .4 +
.4 .4 + .4 .4 + +
.4 .4 + .4 +
.4 .4 + .4 + .4 +
.4 .4 + .4 + 4 +
.4 .4 + .4 + 4 R +
.4 .4 + .4 4 + +
.4 .4 + .4 4 R + +
.4 .4 + 4 .4 + +
.4 .4 + 4 +
.4 .4 + 4 + .4 +
.4 .4 + 4 + 4 +
.4 .4 + 4 + 4 R +
.4 .4 + 4 4 + +
.4 .4 + 4 4 R + +
.4 .4 + 4 R .4 + +
.4 .4 + 4 R +
.4 .4 + 4 R + .4 +
.4 .4 + 4 R + 4 +
.4 .4 + 4 R + 4 R +
.4 .4 + 4 R 4 + +
.4 .4 + 4 R 4 R + +
.4 .4 + 4 R 4 R + R +
.4 .4 4 .4 + + +
.4 .4 4 + .4 + +
.4 .4 4 + +
.4 .4 4 + + .4 +
.4 .4 4 + + 4 +
.4 .4 4 + + 4 R +
.4 .4 4 + 4 + +
.4 .4 4 + 4 R + +
.4 .4 4 4 + + +
.4 .4 4 4 R + + +
.4 .4 4 R .4 + + +
.4 .4 4 R + .4 + +
.4 .4 4 R + +
.4 .4 4 R + + .4 +
.4 .4 4 R + + 4 +
.4 .4 4 R + + 4 R +
.4 .4 4 R + 4 + +
.4 .4 4 R + 4 R + +
.4 .4 4 R 4 + + +
.4 .4 4 R 4 R + + +
.4 .4 4 R 4 R + R + +
.4 4 .4 .4 + + +
.4 4 .4 + .4 + +
.4 4 .4 + +
.4 4 .4 + + .4 +
.4 4 .4 + + 4 +
.4 4 .4 + + 4 R +
.4 4 .4 + 4 + +
.4 4 .4 + 4 R + +
.4 4 .4 4 + + +
.4 4 .4 4 R + + +
.4 4 +
.4 4 + .4 .4 + +
.4 4 + .4 +
.4 4 + .4 + .4 +
.4 4 + .4 + 4 +
.4 4 + .4 + 4 R +
.4 4 + .4 4 + +
.4 4 + .4 4 R + +
.4 4 + 4 .4 + +
.4 4 + 4 +
.4 4 + 4 + .4 +
.4 4 + 4 + 4 +
.4 4 + 4 + 4 R +
.4 4 + 4 4 + +
.4 4 + 4 4 R + +
.4 4 + 4 R .4 + +
.4 4 + 4 R +
.4 4 + 4 R + .4 +
.4 4 + 4 R + 4 +
.4 4 + 4 R + 4 R +
.4 4 + 4 R 4 + +
.4 4 + 4 R 4 R + +
.4 4 + 4 R 4 R + R +
.4 4 4 .4 + + +
.4 4 4 + .4 + +
.4 4 4 + +
.4 4 4 + + .4 +
.4 4 4 + + 4 +
.4 4 4 + + 4 R +
.4 4 4 + 4 + +
.4 4 4 + 4 R + +
.4 4 4 4 + + +
.4 4 4 4 R + + +
.4 4 4 R .4 + + +
.4 4 4 R + .4 + +
.4 4 4 R + +
.4 4 4 R + + .4 +
.4 4 4 R + + 4 +
.4 4 4 R + + 4 R +
.4 4 4 R + 4 + +
.4 4 4 R + 4 R + +
.4 4 4 R 4 + + +
.4 4 4 R 4 R + + +
.4 4 4 R 4 R + R + +
.4 4 R .4 .4 + + +
.4 4 R .4 + .4 + +
.4 4 R .4 + +
.4 4 R .4 + + .4 +
.4 4 R .4 + + 4 +
.4 4 R .4 + + 4 R +
.4 4 R .4 + 4 + +
.4 4 R .4 + 4 R + +
.4 4 R .4 4 + + +
.4 4 R .4 4 R + + +
.4 4 R +
.4 4 R + .4 .4 + +
.4 4 R + .4 +
.4 4 R + .4 + .4 +
.4 4 R + .4 + 4 +
.4 4 R + .4 + 4 R +
.4 4 R + .4 4 + +
.4 4 R + .4 4 R + +
.4 4 R + 4 .4 + +
.4 4 R + 4 +
.4 4 R + 4 + .4 +
.4 4 R + 4 + 4 +
.4 4 R + 4 + 4 R +
.4 4 R + 4 4 + +
.4 4 R + 4 4 R + +
.4 4 R + 4 R .4 + +
.4 4 R + 4 R +
.4 4 R + 4 R + .4 +
.4 4 R + 4 R + 4 +
.4 4 R + 4 R + 4 R +
.4 4 R + 4 R 4 + +
.4 4 R + 4 R 4 R + +
.4 4 R + 4 R 4 R + R +
.4 4 R 4 .4 + + +
.4 4 R 4 + .4 + +
.4 4 R 4 + +
.4 4 R 4 + + .4 +
.4 4 R 4 + + 4 +
.4 4 R 4 + + 4 R +
.4 4 R 4 + 4 + +
.4 4 R 4 + 4 R + +
.4 4 R 4 4 + + +
.4 4 R 4 4 R + + +
.4 4 R 4 R .4 + + +
.4 4 R 4 R + .4 + +
.4 4 R 4 R + +
.4 4 R 4 R + + .4 +
.4 4 R 4 R + + 4 +
.4 4 R 4 R + + 4 R +
.4 4 R 4 R + 4 + +
.4 4 R 4 R + 4 R + +
.4 4 R 4 R + R .4 + +
.4 4 R 4 R + R +
.4 4 R 4 R + R + .4 +
.4 4 R 4 R + R + 4 +
.4 4 R 4 R + R + 4 R +
.4 4 R 4 R + R 4 + +
.4 4 R 4 R + R 4 R + +
.4 4 R 4 R + R 4 R + R +
.4 4 R 4 R 4 + + +
.4 4 R 4 R 4 R + + +
.4 4 R 4 R 4 R + R + +
.4 4 R 4 R 4 R + R + R +
4
4 .4 .4 .4 + + +
4 .4 .4 + .4 + +
4 .4 .4 + +
4 .4 .4 + + .4 +
4 .4 .4 + + 4 +
4 .4 .4 + + 4 R +
4 .4 .4 + 4 + +
4 .4 .4 + 4 R + +
4 .4 .4 4 + + +
4 .4 .4 4 R + + +
4 .4 +
4 .4 + .4 .4 + +
4 .4 + .4 +
4 .4 + .4 + .4 +
4 .4 + .4 + 4 +
4 .4 + .4 + 4 R +
4 .4 + .4 4 + +
4 .4 + .4 4 R + +
4 .4 + 4 .4 + +
4 .4 + 4 +
4 .4 + 4 + .4 +
4 .4 + 4 + 4 +
4 .4 + 4 + 4 R +
4 .4 + 4 4 + +
4 .4 + 4 4 R + +
4 .4 + 4 R .4 + +
4 .4 + 4 R +
4 .4 + 4 R + .4 +
4 .4 + 4 R + 4 +
4 .4 + 4 R + 4 R +
4 .4 + 4 R 4 + +
4 .4 + 4 R 4 R + +
4 .4 + 4 R 4 R + R +
4 .4 4 .4 + + +
4 .4 4 + .4 + +
4 .4 4 + +
4 .4 4 + + .4 +
4 .4 4 + + 4 +
4 .4 4 + + 4 R +
4 .4 4 + 4 + +
4 .4 4 + 4 R + +
4 .4 4 4 + + +
4 .4 4 4 R + + +
4 .4 4 R .4 + + +
4 .4 4 R + .4 + +
4 .4 4 R + +
4 .4 4 R + + .4 +
4 .4 4 R + + 4 +
4 .4 4 R + + 4 R +
4 .4 4 R + 4 + +
4 .4 4 R + 4 R + +
4 .4 4 R 4 + + +
4 .4 4 R 4 R + + +
4 .4 4 R 4 R + R + +
4 4 .4 .4 + + +
4 4 .4 + .4 + +
4 4 .4 + +
4 4 .4 + + .4 +
4 4 .4 + + 4 +
4 4 .4 + + 4 R +
4 4 .4 + 4 + +
4 4 .4 + 4 R + +
4 4 .4 4 + + +
4 4 .4 4 R + + +
4 4 +
4 4 + .4 .4 + +
4 4 + .4 +
4 4 + .4 + .4 +
4 4 + .4 + 4 +
4 4 + .4 + 4 R +
4 4 + .4 4 + +
4 4 + .4 4 R + +
4 4 + 4 .4 + +
4 4 + 4 +
4 4 + 4 + .4 +
4 4 + 4 + 4 +
4 4 + 4 + 4 + R
4 4 + 4 + 4 + R R
4 4 + 4 + 4 R +
4 4 + 4 4 + +
4 4 + 4 4 + + R
4 4 + 4 4 + + R R
4 4 + 4 4 R + +
4 4 + 4 R .4 + +
4 4 + 4 R +
4 4 + 4 R + .4 +
4 4 + 4 R + 4 +
4 4 + 4 R + 4 R +
4 4 + 4 R 4 + +
4 4 + 4 R 4 R + +
4 4 + 4 R 4 R + R +
4 4 4 .4 + + +
4 4 4 + .4 + +
4 4 4 + +
4 4 4 + + .4 +
4 4 4 + + 4 +
4 4 4 + + 4 + R
4 4 4 + + 4 + R R
4 4 4 + + 4 R +
4 4 4 + 4 + +
4 4 4 + 4 + + R
4 4 4 + 4 + + R R
4 4 4 + 4 R + +
4 4 4 4 + + +
4 4 4 4 + + + R
4 4 4 4 + + + R R
4 4 4 4 R + + +
4 4 4 R .4 + + +
4 4 4 R + .4 + +
4 4 4 R + +
4 4 4 R + + .4 +
4 4 4 R + + 4 +
4 4 4 R + + 4 R +
4 4 4 R + 4 + +
4 4 4 R + 4 R + +
4 4 4 R 4 + + +
4 4 4 R 4 R + + +
4 4 4 R 4 R + R + +
4 4 R .4 .4 + + +
4 4 R .4 + .4 + +
4 4 R .4 + +
4 4 R .4 + + .4 +
4 4 R .4 + + 4 +
4 4 R .4 + + 4 R +
4 4 R .4 + 4 + +
4 4 R .4 + 4 R + +
4 4 R .4 4 + + +
4 4 R .4 4 R + + +
4 4 R +
4 4 R + .4 .4 + +
4 4 R + .4 +
4 4 R + .4 + .4 +
4 4 R + .4 + 4 +
4 4 R + .4 + 4 R +
4 4 R + .4 4 + +
4 4 R + .4 4 R + +
4 4 R + 4 .4 + +
4 4 R + 4 +
4 4 R + 4 + .4 +
4 4 R + 4 + 4 +
4 4 R + 4 + 4 R +
4 4 R + 4 4 + +
4 4 R + 4 4 R + +
4 4 R + 4 R .4 + +
4 4 R + 4 R +
4 4 R + 4 R + .4 +
4 4 R + 4 R + 4 +
4 4 R + 4 R + 4 R +
4 4 R + 4 R 4 + +
4 4 R + 4 R 4 R + +
4 4 R + 4 R 4 R + R +
4 4 R 4 .4 + + +
4 4 R 4 + .4 + +
4 4 R 4 + +
4 4 R 4 + + .4 +
4 4 R 4 + + 4 +
4 4 R 4 + + 4 R +
4 4 R 4 + 4 + +
4 4 R 4 + 4 R + +
4 4 R 4 4 + + +
4 4 R 4 4 R + + +
4 4 R 4 R .4 + + +
4 4 R 4 R + .4 + +
4 4 R 4 R + +
4 4 R 4 R + + .4 +
4 4 R 4 R + + 4 +
4 4 R 4 R + + 4 R +
4 4 R 4 R + 4 + +
4 4 R 4 R + 4 R + +
4 4 R 4 R + R .4 + +
4 4 R 4 R + R +
4 4 R 4 R + R + .4 +
4 4 R 4 R + R + 4 +
4 4 R 4 R + R + 4 R +
4 4 R 4 R + R 4 + +
4 4 R 4 R + R 4 R + +
4 4 R 4 R + R 4 R + R +
4 4 R 4 R 4 + + +
4 4 R 4 R 4 R + + +
4 4 R 4 R 4 R + R + +
4 4 R 4 R 4 R + R + R +
4 R
4 R .4 .4 .4 + + +
4 R .4 .4 + .4 + +
4 R .4 .4 + +
4 R .4 .4 + + .4 +
4 R .4 .4 + + 4 +
4 R .4 .4 + + 4 R +
4 R .4 .4 + 4 + +
4 R .4 .4 + 4 R + +
4 R .4 .4 4 + + +
4 R .4 .4 4 R + + +
4 R .4 +
4 R .4 + .4 .4 + +
4 R .4 + .4 +
4 R .4 + .4 + .4 +
4 R .4 + .4 + 4 +
4 R .4 + .4 + 4 R +
4 R .4 + .4 4 + +
4 R .4 + .4 4 R + +
4 R .4 + 4 .4 + +
4 R .4 + 4 +
4 R .4 + 4 + .4 +
4 R .4 + 4 + 4 +
4 R .4 + 4 + 4 R +
4 R .4 + 4 4 + +
4 R .4 + 4 4 R + +
4 R .4 + 4 R .4 + +
4 R .4 + 4 R +
4 R .4 + 4 R + .4 +
4 R .4 + 4 R + 4 +
4 R .4 + 4 R + 4 R +
4 R .4 + 4 R 4 + +
4 R .4 + 4 R 4 R + +
4 R .4 + 4 R 4 R + R +
4 R .4 4 .4 + + +
4 R .4 4 + .4 + +
4 R .4 4 + +
4 R .4 4 + + .4 +
4 R .4 4 + + 4 +
4 R .4 4 + + 4 R +
4 R .4 4 + 4 + +
4 R .4 4 + 4 R + +
4 R .4 4 4 + + +
4 R .4 4 4 R + + +
4 R .4 4 R .4 + + +
4 R .4 4 R + .4 + +
4 R .4 4 R + +
4 R .4 4 R + + .4 +
4 R .4 4 R + + 4 +
4 R .4 4 R + + 4 R +
4 R .4 4 R + 4 + +
4 R .4 4 R + 4 R + +
4 R .4 4 R 4 + + +
4 R .4 4 R 4 R + + +
4 R .4 4 R 4 R + R + +
4 R 4 .4 .4 + + +
4 R 4 .4 + .4 + +
4 R 4 .4 + +
4 R 4 .4 + + .4 +
4 R 4 .4 + + 4 +
4 R 4 .4 + + 4 R +
4 R 4 .4 + 4 + +
4 R 4 .4 + 4 R + +
4 R 4 .4 4 + + +
4 R 4 .4 4 R + + +
4 R 4 +
4 R 4 + .4 .4 + +
4 R 4 + .4 +
4 R 4 + .4 + .4 +
4 R 4 + .4 + 4 +
4 R 4 + .4 + 4 R +
4 R 4 + .4 4 + +
4 R 4 + .4 4 R + +
4 R 4 + 4 .4 + +
4 R 4 + 4 +
4 R 4 + 4 + .4 +
4 R 4 + 4 + 4 +
4 R 4 + 4 + 4 R +
4 R 4 + 4 4 + +
4 R 4 + 4 4 R + +
4 R 4 + 4 R .4 + +
4 R 4 + 4 R +
4 R 4 + 4 R + .4 +
4 R 4 + 4 R + 4 +
4 R 4 + 4 R + 4 R +
4 R 4 + 4 R 4 + +
4 R 4 + 4 R 4 R + +
4 R 4 + 4 R 4 R + R +
4 R 4 4 .4 + + +
4 R 4 4 + .4 + +
4 R 4 4 + +
4 R 4 4 + + .4 +
4 R 4 4 + + 4 +
4 R 4 4 + + 4 R +
4 R 4 4 + 4 + +
4 R 4 4 + 4 R + +
4 R 4 4 4 + + +
4 R 4 4 4 R + + +
4 R 4 4 R .4 + + +
4 R 4 4 R + .4 + +
4 R 4 4 R + +
4 R 4 4 R + + .4 +
4 R 4 4 R + + 4 +
4 R 4 4 R + + 4 R +
4 R 4 4 R + 4 + +
4 R 4 4 R + 4 R + +
4 R 4 4 R 4 + + +
4 R 4 4 R 4 R + + +
4 R 4 4 R 4 R + R + +
4 R 4 R .4 .4 + + +
4 R 4 R .4 + .4 + +
4 R 4 R .4 + +
4 R 4 R .4 + + .4 +
4 R 4 R .4 + + 4 +
4 R 4 R .4 + + 4 R +
4 R 4 R .4 + 4 + +
4 R 4 R .4 + 4 R + +
4 R 4 R .4 4 + + +
4 R 4 R .4 4 R + + +
4 R 4 R +
4 R 4 R + .4 .4 + +
4 R 4 R + .4 +
4 R 4 R + .4 + .4 +
4 R 4 R + .4 + 4 +
4 R 4 R + .4 + 4 R +
4 R 4 R + .4 4 + +
4 R 4 R + .4 4 R + +
4 R 4 R + 4 .4 + +
4 R 4 R + 4 +
4 R 4 R + 4 + .4 +
4 R 4 R + 4 + 4 +
4 R 4 R + 4 + 4 R +
4 R 4 R + 4 4 + +
4 R 4 R + 4 4 R + +
4 R 4 R + 4 R .4 + +
4 R 4 R + 4 R +
4 R 4 R + 4 R + .4 +
4 R 4 R + 4 R + 4 +
4 R 4 R + 4 R + 4 R +
4 R 4 R + 4 R 4 + +
4 R 4 R + 4 R 4 R + +
4 R 4 R + 4 R 4 R + R +
4 R 4 R + R
4 R 4 R + R .4 .4 + +
4 R 4 R + R .4 +
4 R 4 R + R .4 + .4 +
4 R 4 R + R .4 + 4 +
4 R 4 R + R .4 + 4 R +
4 R 4 R + R .4 4 + +
4 R 4 R + R .4 4 R + +
4 R 4 R + R 4 .4 + +
4 R 4 R + R 4 +
4 R 4 R + R 4 + .4 +
4 R 4 R + R 4 + 4 +
4 R 4 R + R 4 + 4 R +
4 R 4 R + R 4 4 + +
4 R 4 R + R 4 4 R + +
4 R 4 R + R 4 R .4 + +
4 R 4 R + R 4 R +
4 R 4 R + R 4 R + .4 +
4 R 4 R + R 4 R + 4 +
4 R 4 R + R 4 R + 4 R +
4 R 4 R + R 4 R + R
4 R 4 R + R 4 R + R .4 +
4 R 4 R + R 4 R + R 4 +
4 R 4 R + R 4 R + R 4 R +
4 R 4 R + R 4 R + R 4 R + R
4 R 4 R + R 4 R 4 + +
4 R 4 R + R 4 R 4 R + +
4 R 4 R + R 4 R 4 R + R +
4 R 4 R + R 4 R 4 R + R + R
4 R 4 R 4 .4 + + +
4 R 4 R 4 + .4 + +
4 R 4 R 4 + +
4 R 4 R 4 + + .4 +
4 R 4 R 4 + + 4 +
4 R 4 R 4 + + 4 R +
4 R 4 R 4 + 4 + +
4 R 4 R 4 + 4 R + +
4 R 4 R 4 4 + + +
4 R 4 R 4 4 R + + +
4 R 4 R 4 R .4 + + +
4 R 4 R 4 R + .4 + +
4 R 4 R 4 R + +
4 R 4 R 4 R + + .4 +
4 R 4 R 4 R + + 4 +
4 R 4 R 4 R + + 4 R +
4 R 4 R 4 R + 4 + +
4 R 4 R 4 R + 4 R + +
4 R 4 R 4 R + R .4 + +
4 R 4 R 4 R + R +
4 R 4 R 4 R + R + .4 +
4 R 4 R 4 R + R + 4 +
4 R 4 R 4 R + R + 4 R +
4 R 4 R 4 R + R + R
4 R 4 R 4 R + R + R .4 +
4 R 4 R 4 R + R + R 4 +
4 R 4 R 4 R + R + R 4 R +
4 R 4 R 4 R + R + R 4 R + R
4 R 4 R 4 R + R 4 + +
4 R 4 R 4 R + R 4 R + +
4 R 4 R 4 R + R 4 R + R +
4 R 4 R 4 R + R 4 R + R + R
4 R 4 R 4 R 4 + + +
4 R 4 R 4 R 4 R + + +
4 R 4 R 4 R 4 R + R + +
4 R 4 R 4 R 4 R + R + R +
4 R 4 R 4 R 4 R + R + R + R";

            ExpressionSearch search = new ExpressionSearch();
            search.AddOperand("4");
            search.AddOperand(".4");
            search.AddUnary("R");
            search.AddUnary("+");

            TestSearch(search, Expected);
        }

        [Fact]
        public void TwoOperandsAndOneBinaryOperator()
        {
            const string Expected = @".4
.4 .4 -
.4 .4 - .4 -
.4 .4 - .4 - .4 -
.4 .4 - .4 - 4 -
.4 .4 - .4 .4 - -
.4 .4 - .4 4 - -
.4 .4 - 4 -
.4 .4 - 4 - .4 -
.4 .4 - 4 - 4 -
.4 .4 - 4 .4 - -
.4 .4 - 4 4 - -
.4 .4 .4 - -
.4 .4 .4 - - .4 -
.4 .4 .4 - - 4 -
.4 .4 .4 - .4 - -
.4 .4 .4 - 4 - -
.4 .4 .4 .4 - - -
.4 .4 .4 4 - - -
.4 .4 4 - -
.4 .4 4 - - .4 -
.4 .4 4 - - 4 -
.4 .4 4 - .4 - -
.4 .4 4 - 4 - -
.4 .4 4 .4 - - -
.4 .4 4 4 - - -
.4 4 -
.4 4 - .4 -
.4 4 - .4 - .4 -
.4 4 - .4 - 4 -
.4 4 - .4 .4 - -
.4 4 - .4 4 - -
.4 4 - 4 -
.4 4 - 4 - .4 -
.4 4 - 4 - 4 -
.4 4 - 4 .4 - -
.4 4 - 4 4 - -
.4 4 .4 - -
.4 4 .4 - - .4 -
.4 4 .4 - - 4 -
.4 4 .4 - .4 - -
.4 4 .4 - 4 - -
.4 4 .4 .4 - - -
.4 4 .4 4 - - -
.4 4 4 - -
.4 4 4 - - .4 -
.4 4 4 - - 4 -
.4 4 4 - .4 - -
.4 4 4 - 4 - -
.4 4 4 .4 - - -
.4 4 4 4 - - -
4
4 .4 -
4 .4 - .4 -
4 .4 - .4 - .4 -
4 .4 - .4 - 4 -
4 .4 - .4 .4 - -
4 .4 - .4 4 - -
4 .4 - 4 -
4 .4 - 4 - .4 -
4 .4 - 4 - 4 -
4 .4 - 4 .4 - -
4 .4 - 4 4 - -
4 .4 .4 - -
4 .4 .4 - - .4 -
4 .4 .4 - - 4 -
4 .4 .4 - .4 - -
4 .4 .4 - 4 - -
4 .4 .4 .4 - - -
4 .4 .4 4 - - -
4 .4 4 - -
4 .4 4 - - .4 -
4 .4 4 - - 4 -
4 .4 4 - .4 - -
4 .4 4 - 4 - -
4 .4 4 .4 - - -
4 .4 4 4 - - -
4 4 -
4 4 - .4 -
4 4 - .4 - .4 -
4 4 - .4 - 4 -
4 4 - .4 .4 - -
4 4 - .4 4 - -
4 4 - 4 -
4 4 - 4 - .4 -
4 4 - 4 - 4 -
4 4 - 4 .4 - -
4 4 - 4 4 - -
4 4 .4 - -
4 4 .4 - - .4 -
4 4 .4 - - 4 -
4 4 .4 - .4 - -
4 4 .4 - 4 - -
4 4 .4 .4 - - -
4 4 .4 4 - - -
4 4 4 - -
4 4 4 - - .4 -
4 4 4 - - 4 -
4 4 4 - .4 - -
4 4 4 - 4 - -
4 4 4 .4 - - -
4 4 4 4 - - -";

            ExpressionSearch search = new ExpressionSearch();
            search.AddOperand("4");
            search.AddOperand(".4");
            search.AddBinary("-");

            TestSearch(search, Expected);
        }

        [Fact]
        public void TwoOperandsAndTwoBinaryOperators()
        {
            const string Expected = @".4
.4 .4 -
.4 .4 - .4 -
.4 .4 - .4 - .4 -
.4 .4 - .4 - .4 +
.4 .4 - .4 - 4 -
.4 .4 - .4 - 4 +
.4 .4 - .4 .4 - -
.4 .4 - .4 .4 - +
.4 .4 - .4 .4 + -
.4 .4 - .4 .4 + +
.4 .4 - .4 +
.4 .4 - .4 + .4 -
.4 .4 - .4 + .4 +
.4 .4 - .4 + 4 -
.4 .4 - .4 + 4 +
.4 .4 - .4 4 - -
.4 .4 - .4 4 - +
.4 .4 - .4 4 + -
.4 .4 - .4 4 + +
.4 .4 - 4 -
.4 .4 - 4 - .4 -
.4 .4 - 4 - .4 +
.4 .4 - 4 - 4 -
.4 .4 - 4 - 4 +
.4 .4 - 4 .4 - -
.4 .4 - 4 .4 - +
.4 .4 - 4 .4 + -
.4 .4 - 4 .4 + +
.4 .4 - 4 +
.4 .4 - 4 + .4 -
.4 .4 - 4 + .4 +
.4 .4 - 4 + 4 -
.4 .4 - 4 + 4 +
.4 .4 - 4 4 - -
.4 .4 - 4 4 - +
.4 .4 - 4 4 + -
.4 .4 - 4 4 + +
.4 .4 .4 - -
.4 .4 .4 - - .4 -
.4 .4 .4 - - .4 +
.4 .4 .4 - - 4 -
.4 .4 .4 - - 4 +
.4 .4 .4 - .4 - -
.4 .4 .4 - .4 - +
.4 .4 .4 - .4 + -
.4 .4 .4 - .4 + +
.4 .4 .4 - +
.4 .4 .4 - + .4 -
.4 .4 .4 - + .4 +
.4 .4 .4 - + 4 -
.4 .4 .4 - + 4 +
.4 .4 .4 - 4 - -
.4 .4 .4 - 4 - +
.4 .4 .4 - 4 + -
.4 .4 .4 - 4 + +
.4 .4 .4 .4 - - -
.4 .4 .4 .4 - - +
.4 .4 .4 .4 - + -
.4 .4 .4 .4 - + +
.4 .4 .4 .4 + - -
.4 .4 .4 .4 + - +
.4 .4 .4 .4 + + -
.4 .4 .4 .4 + + +
.4 .4 .4 + -
.4 .4 .4 + - .4 -
.4 .4 .4 + - .4 +
.4 .4 .4 + - 4 -
.4 .4 .4 + - 4 +
.4 .4 .4 + .4 - -
.4 .4 .4 + .4 - +
.4 .4 .4 + .4 + -
.4 .4 .4 + .4 + +
.4 .4 .4 + +
.4 .4 .4 + + .4 -
.4 .4 .4 + + .4 +
.4 .4 .4 + + 4 -
.4 .4 .4 + + 4 +
.4 .4 .4 + 4 - -
.4 .4 .4 + 4 - +
.4 .4 .4 + 4 + -
.4 .4 .4 + 4 + +
.4 .4 .4 4 - - -
.4 .4 .4 4 - - +
.4 .4 .4 4 - + -
.4 .4 .4 4 - + +
.4 .4 .4 4 + - -
.4 .4 .4 4 + - +
.4 .4 .4 4 + + -
.4 .4 .4 4 + + +
.4 .4 +
.4 .4 + .4 -
.4 .4 + .4 - .4 -
.4 .4 + .4 - .4 +
.4 .4 + .4 - 4 -
.4 .4 + .4 - 4 +
.4 .4 + .4 .4 - -
.4 .4 + .4 .4 - +
.4 .4 + .4 .4 + -
.4 .4 + .4 .4 + +
.4 .4 + .4 +
.4 .4 + .4 + .4 -
.4 .4 + .4 + .4 +
.4 .4 + .4 + 4 -
.4 .4 + .4 + 4 +
.4 .4 + .4 4 - -
.4 .4 + .4 4 - +
.4 .4 + .4 4 + -
.4 .4 + .4 4 + +
.4 .4 + 4 -
.4 .4 + 4 - .4 -
.4 .4 + 4 - .4 +
.4 .4 + 4 - 4 -
.4 .4 + 4 - 4 +
.4 .4 + 4 .4 - -
.4 .4 + 4 .4 - +
.4 .4 + 4 .4 + -
.4 .4 + 4 .4 + +
.4 .4 + 4 +
.4 .4 + 4 + .4 -
.4 .4 + 4 + .4 +
.4 .4 + 4 + 4 -
.4 .4 + 4 + 4 +
.4 .4 + 4 4 - -
.4 .4 + 4 4 - +
.4 .4 + 4 4 + -
.4 .4 + 4 4 + +
.4 .4 4 - -
.4 .4 4 - - .4 -
.4 .4 4 - - .4 +
.4 .4 4 - - 4 -
.4 .4 4 - - 4 +
.4 .4 4 - .4 - -
.4 .4 4 - .4 - +
.4 .4 4 - .4 + -
.4 .4 4 - .4 + +
.4 .4 4 - +
.4 .4 4 - + .4 -
.4 .4 4 - + .4 +
.4 .4 4 - + 4 -
.4 .4 4 - + 4 +
.4 .4 4 - 4 - -
.4 .4 4 - 4 - +
.4 .4 4 - 4 + -
.4 .4 4 - 4 + +
.4 .4 4 .4 - - -
.4 .4 4 .4 - - +
.4 .4 4 .4 - + -
.4 .4 4 .4 - + +
.4 .4 4 .4 + - -
.4 .4 4 .4 + - +
.4 .4 4 .4 + + -
.4 .4 4 .4 + + +
.4 .4 4 + -
.4 .4 4 + - .4 -
.4 .4 4 + - .4 +
.4 .4 4 + - 4 -
.4 .4 4 + - 4 +
.4 .4 4 + .4 - -
.4 .4 4 + .4 - +
.4 .4 4 + .4 + -
.4 .4 4 + .4 + +
.4 .4 4 + +
.4 .4 4 + + .4 -
.4 .4 4 + + .4 +
.4 .4 4 + + 4 -
.4 .4 4 + + 4 +
.4 .4 4 + 4 - -
.4 .4 4 + 4 - +
.4 .4 4 + 4 + -
.4 .4 4 + 4 + +
.4 .4 4 4 - - -
.4 .4 4 4 - - +
.4 .4 4 4 - + -
.4 .4 4 4 - + +
.4 .4 4 4 + - -
.4 .4 4 4 + - +
.4 .4 4 4 + + -
.4 .4 4 4 + + +
.4 4 -
.4 4 - .4 -
.4 4 - .4 - .4 -
.4 4 - .4 - .4 +
.4 4 - .4 - 4 -
.4 4 - .4 - 4 +
.4 4 - .4 .4 - -
.4 4 - .4 .4 - +
.4 4 - .4 .4 + -
.4 4 - .4 .4 + +
.4 4 - .4 +
.4 4 - .4 + .4 -
.4 4 - .4 + .4 +
.4 4 - .4 + 4 -
.4 4 - .4 + 4 +
.4 4 - .4 4 - -
.4 4 - .4 4 - +
.4 4 - .4 4 + -
.4 4 - .4 4 + +
.4 4 - 4 -
.4 4 - 4 - .4 -
.4 4 - 4 - .4 +
.4 4 - 4 - 4 -
.4 4 - 4 - 4 +
.4 4 - 4 .4 - -
.4 4 - 4 .4 - +
.4 4 - 4 .4 + -
.4 4 - 4 .4 + +
.4 4 - 4 +
.4 4 - 4 + .4 -
.4 4 - 4 + .4 +
.4 4 - 4 + 4 -
.4 4 - 4 + 4 +
.4 4 - 4 4 - -
.4 4 - 4 4 - +
.4 4 - 4 4 + -
.4 4 - 4 4 + +
.4 4 .4 - -
.4 4 .4 - - .4 -
.4 4 .4 - - .4 +
.4 4 .4 - - 4 -
.4 4 .4 - - 4 +
.4 4 .4 - .4 - -
.4 4 .4 - .4 - +
.4 4 .4 - .4 + -
.4 4 .4 - .4 + +
.4 4 .4 - +
.4 4 .4 - + .4 -
.4 4 .4 - + .4 +
.4 4 .4 - + 4 -
.4 4 .4 - + 4 +
.4 4 .4 - 4 - -
.4 4 .4 - 4 - +
.4 4 .4 - 4 + -
.4 4 .4 - 4 + +
.4 4 .4 .4 - - -
.4 4 .4 .4 - - +
.4 4 .4 .4 - + -
.4 4 .4 .4 - + +
.4 4 .4 .4 + - -
.4 4 .4 .4 + - +
.4 4 .4 .4 + + -
.4 4 .4 .4 + + +
.4 4 .4 + -
.4 4 .4 + - .4 -
.4 4 .4 + - .4 +
.4 4 .4 + - 4 -
.4 4 .4 + - 4 +
.4 4 .4 + .4 - -
.4 4 .4 + .4 - +
.4 4 .4 + .4 + -
.4 4 .4 + .4 + +
.4 4 .4 + +
.4 4 .4 + + .4 -
.4 4 .4 + + .4 +
.4 4 .4 + + 4 -
.4 4 .4 + + 4 +
.4 4 .4 + 4 - -
.4 4 .4 + 4 - +
.4 4 .4 + 4 + -
.4 4 .4 + 4 + +
.4 4 .4 4 - - -
.4 4 .4 4 - - +
.4 4 .4 4 - + -
.4 4 .4 4 - + +
.4 4 .4 4 + - -
.4 4 .4 4 + - +
.4 4 .4 4 + + -
.4 4 .4 4 + + +
.4 4 +
.4 4 + .4 -
.4 4 + .4 - .4 -
.4 4 + .4 - .4 +
.4 4 + .4 - 4 -
.4 4 + .4 - 4 +
.4 4 + .4 .4 - -
.4 4 + .4 .4 - +
.4 4 + .4 .4 + -
.4 4 + .4 .4 + +
.4 4 + .4 +
.4 4 + .4 + .4 -
.4 4 + .4 + .4 +
.4 4 + .4 + 4 -
.4 4 + .4 + 4 +
.4 4 + .4 4 - -
.4 4 + .4 4 - +
.4 4 + .4 4 + -
.4 4 + .4 4 + +
.4 4 + 4 -
.4 4 + 4 - .4 -
.4 4 + 4 - .4 +
.4 4 + 4 - 4 -
.4 4 + 4 - 4 +
.4 4 + 4 .4 - -
.4 4 + 4 .4 - +
.4 4 + 4 .4 + -
.4 4 + 4 .4 + +
.4 4 + 4 +
.4 4 + 4 + .4 -
.4 4 + 4 + .4 +
.4 4 + 4 + 4 -
.4 4 + 4 + 4 +
.4 4 + 4 4 - -
.4 4 + 4 4 - +
.4 4 + 4 4 + -
.4 4 + 4 4 + +
.4 4 4 - -
.4 4 4 - - .4 -
.4 4 4 - - .4 +
.4 4 4 - - 4 -
.4 4 4 - - 4 +
.4 4 4 - .4 - -
.4 4 4 - .4 - +
.4 4 4 - .4 + -
.4 4 4 - .4 + +
.4 4 4 - +
.4 4 4 - + .4 -
.4 4 4 - + .4 +
.4 4 4 - + 4 -
.4 4 4 - + 4 +
.4 4 4 - 4 - -
.4 4 4 - 4 - +
.4 4 4 - 4 + -
.4 4 4 - 4 + +
.4 4 4 .4 - - -
.4 4 4 .4 - - +
.4 4 4 .4 - + -
.4 4 4 .4 - + +
.4 4 4 .4 + - -
.4 4 4 .4 + - +
.4 4 4 .4 + + -
.4 4 4 .4 + + +
.4 4 4 + -
.4 4 4 + - .4 -
.4 4 4 + - .4 +
.4 4 4 + - 4 -
.4 4 4 + - 4 +
.4 4 4 + .4 - -
.4 4 4 + .4 - +
.4 4 4 + .4 + -
.4 4 4 + .4 + +
.4 4 4 + +
.4 4 4 + + .4 -
.4 4 4 + + .4 +
.4 4 4 + + 4 -
.4 4 4 + + 4 +
.4 4 4 + 4 - -
.4 4 4 + 4 - +
.4 4 4 + 4 + -
.4 4 4 + 4 + +
.4 4 4 4 - - -
.4 4 4 4 - - +
.4 4 4 4 - + -
.4 4 4 4 - + +
.4 4 4 4 + - -
.4 4 4 4 + - +
.4 4 4 4 + + -
.4 4 4 4 + + +
4
4 .4 -
4 .4 - .4 -
4 .4 - .4 - .4 -
4 .4 - .4 - .4 +
4 .4 - .4 - 4 -
4 .4 - .4 - 4 +
4 .4 - .4 .4 - -
4 .4 - .4 .4 - +
4 .4 - .4 .4 + -
4 .4 - .4 .4 + +
4 .4 - .4 +
4 .4 - .4 + .4 -
4 .4 - .4 + .4 +
4 .4 - .4 + 4 -
4 .4 - .4 + 4 +
4 .4 - .4 4 - -
4 .4 - .4 4 - +
4 .4 - .4 4 + -
4 .4 - .4 4 + +
4 .4 - 4 -
4 .4 - 4 - .4 -
4 .4 - 4 - .4 +
4 .4 - 4 - 4 -
4 .4 - 4 - 4 +
4 .4 - 4 .4 - -
4 .4 - 4 .4 - +
4 .4 - 4 .4 + -
4 .4 - 4 .4 + +
4 .4 - 4 +
4 .4 - 4 + .4 -
4 .4 - 4 + .4 +
4 .4 - 4 + 4 -
4 .4 - 4 + 4 +
4 .4 - 4 4 - -
4 .4 - 4 4 - +
4 .4 - 4 4 + -
4 .4 - 4 4 + +
4 .4 .4 - -
4 .4 .4 - - .4 -
4 .4 .4 - - .4 +
4 .4 .4 - - 4 -
4 .4 .4 - - 4 +
4 .4 .4 - .4 - -
4 .4 .4 - .4 - +
4 .4 .4 - .4 + -
4 .4 .4 - .4 + +
4 .4 .4 - +
4 .4 .4 - + .4 -
4 .4 .4 - + .4 +
4 .4 .4 - + 4 -
4 .4 .4 - + 4 +
4 .4 .4 - 4 - -
4 .4 .4 - 4 - +
4 .4 .4 - 4 + -
4 .4 .4 - 4 + +
4 .4 .4 .4 - - -
4 .4 .4 .4 - - +
4 .4 .4 .4 - + -
4 .4 .4 .4 - + +
4 .4 .4 .4 + - -
4 .4 .4 .4 + - +
4 .4 .4 .4 + + -
4 .4 .4 .4 + + +
4 .4 .4 + -
4 .4 .4 + - .4 -
4 .4 .4 + - .4 +
4 .4 .4 + - 4 -
4 .4 .4 + - 4 +
4 .4 .4 + .4 - -
4 .4 .4 + .4 - +
4 .4 .4 + .4 + -
4 .4 .4 + .4 + +
4 .4 .4 + +
4 .4 .4 + + .4 -
4 .4 .4 + + .4 +
4 .4 .4 + + 4 -
4 .4 .4 + + 4 +
4 .4 .4 + 4 - -
4 .4 .4 + 4 - +
4 .4 .4 + 4 + -
4 .4 .4 + 4 + +
4 .4 .4 4 - - -
4 .4 .4 4 - - +
4 .4 .4 4 - + -
4 .4 .4 4 - + +
4 .4 .4 4 + - -
4 .4 .4 4 + - +
4 .4 .4 4 + + -
4 .4 .4 4 + + +
4 .4 +
4 .4 + .4 -
4 .4 + .4 - .4 -
4 .4 + .4 - .4 +
4 .4 + .4 - 4 -
4 .4 + .4 - 4 +
4 .4 + .4 .4 - -
4 .4 + .4 .4 - +
4 .4 + .4 .4 + -
4 .4 + .4 .4 + +
4 .4 + .4 +
4 .4 + .4 + .4 -
4 .4 + .4 + .4 +
4 .4 + .4 + 4 -
4 .4 + .4 + 4 +
4 .4 + .4 4 - -
4 .4 + .4 4 - +
4 .4 + .4 4 + -
4 .4 + .4 4 + +
4 .4 + 4 -
4 .4 + 4 - .4 -
4 .4 + 4 - .4 +
4 .4 + 4 - 4 -
4 .4 + 4 - 4 +
4 .4 + 4 .4 - -
4 .4 + 4 .4 - +
4 .4 + 4 .4 + -
4 .4 + 4 .4 + +
4 .4 + 4 +
4 .4 + 4 + .4 -
4 .4 + 4 + .4 +
4 .4 + 4 + 4 -
4 .4 + 4 + 4 +
4 .4 + 4 4 - -
4 .4 + 4 4 - +
4 .4 + 4 4 + -
4 .4 + 4 4 + +
4 .4 4 - -
4 .4 4 - - .4 -
4 .4 4 - - .4 +
4 .4 4 - - 4 -
4 .4 4 - - 4 +
4 .4 4 - .4 - -
4 .4 4 - .4 - +
4 .4 4 - .4 + -
4 .4 4 - .4 + +
4 .4 4 - +
4 .4 4 - + .4 -
4 .4 4 - + .4 +
4 .4 4 - + 4 -
4 .4 4 - + 4 +
4 .4 4 - 4 - -
4 .4 4 - 4 - +
4 .4 4 - 4 + -
4 .4 4 - 4 + +
4 .4 4 .4 - - -
4 .4 4 .4 - - +
4 .4 4 .4 - + -
4 .4 4 .4 - + +
4 .4 4 .4 + - -
4 .4 4 .4 + - +
4 .4 4 .4 + + -
4 .4 4 .4 + + +
4 .4 4 + -
4 .4 4 + - .4 -
4 .4 4 + - .4 +
4 .4 4 + - 4 -
4 .4 4 + - 4 +
4 .4 4 + .4 - -
4 .4 4 + .4 - +
4 .4 4 + .4 + -
4 .4 4 + .4 + +
4 .4 4 + +
4 .4 4 + + .4 -
4 .4 4 + + .4 +
4 .4 4 + + 4 -
4 .4 4 + + 4 +
4 .4 4 + 4 - -
4 .4 4 + 4 - +
4 .4 4 + 4 + -
4 .4 4 + 4 + +
4 .4 4 4 - - -
4 .4 4 4 - - +
4 .4 4 4 - + -
4 .4 4 4 - + +
4 .4 4 4 + - -
4 .4 4 4 + - +
4 .4 4 4 + + -
4 .4 4 4 + + +
4 4 -
4 4 - .4 -
4 4 - .4 - .4 -
4 4 - .4 - .4 +
4 4 - .4 - 4 -
4 4 - .4 - 4 +
4 4 - .4 .4 - -
4 4 - .4 .4 - +
4 4 - .4 .4 + -
4 4 - .4 .4 + +
4 4 - .4 +
4 4 - .4 + .4 -
4 4 - .4 + .4 +
4 4 - .4 + 4 -
4 4 - .4 + 4 +
4 4 - .4 4 - -
4 4 - .4 4 - +
4 4 - .4 4 + -
4 4 - .4 4 + +
4 4 - 4 -
4 4 - 4 - .4 -
4 4 - 4 - .4 +
4 4 - 4 - 4 -
4 4 - 4 - 4 +
4 4 - 4 .4 - -
4 4 - 4 .4 - +
4 4 - 4 .4 + -
4 4 - 4 .4 + +
4 4 - 4 +
4 4 - 4 + .4 -
4 4 - 4 + .4 +
4 4 - 4 + 4 -
4 4 - 4 + 4 +
4 4 - 4 4 - -
4 4 - 4 4 - +
4 4 - 4 4 + -
4 4 - 4 4 + +
4 4 .4 - -
4 4 .4 - - .4 -
4 4 .4 - - .4 +
4 4 .4 - - 4 -
4 4 .4 - - 4 +
4 4 .4 - .4 - -
4 4 .4 - .4 - +
4 4 .4 - .4 + -
4 4 .4 - .4 + +
4 4 .4 - +
4 4 .4 - + .4 -
4 4 .4 - + .4 +
4 4 .4 - + 4 -
4 4 .4 - + 4 +
4 4 .4 - 4 - -
4 4 .4 - 4 - +
4 4 .4 - 4 + -
4 4 .4 - 4 + +
4 4 .4 .4 - - -
4 4 .4 .4 - - +
4 4 .4 .4 - + -
4 4 .4 .4 - + +
4 4 .4 .4 + - -
4 4 .4 .4 + - +
4 4 .4 .4 + + -
4 4 .4 .4 + + +
4 4 .4 + -
4 4 .4 + - .4 -
4 4 .4 + - .4 +
4 4 .4 + - 4 -
4 4 .4 + - 4 +
4 4 .4 + .4 - -
4 4 .4 + .4 - +
4 4 .4 + .4 + -
4 4 .4 + .4 + +
4 4 .4 + +
4 4 .4 + + .4 -
4 4 .4 + + .4 +
4 4 .4 + + 4 -
4 4 .4 + + 4 +
4 4 .4 + 4 - -
4 4 .4 + 4 - +
4 4 .4 + 4 + -
4 4 .4 + 4 + +
4 4 .4 4 - - -
4 4 .4 4 - - +
4 4 .4 4 - + -
4 4 .4 4 - + +
4 4 .4 4 + - -
4 4 .4 4 + - +
4 4 .4 4 + + -
4 4 .4 4 + + +
4 4 +
4 4 + .4 -
4 4 + .4 - .4 -
4 4 + .4 - .4 +
4 4 + .4 - 4 -
4 4 + .4 - 4 +
4 4 + .4 .4 - -
4 4 + .4 .4 - +
4 4 + .4 .4 + -
4 4 + .4 .4 + +
4 4 + .4 +
4 4 + .4 + .4 -
4 4 + .4 + .4 +
4 4 + .4 + 4 -
4 4 + .4 + 4 +
4 4 + .4 4 - -
4 4 + .4 4 - +
4 4 + .4 4 + -
4 4 + .4 4 + +
4 4 + 4 -
4 4 + 4 - .4 -
4 4 + 4 - .4 +
4 4 + 4 - 4 -
4 4 + 4 - 4 +
4 4 + 4 .4 - -
4 4 + 4 .4 - +
4 4 + 4 .4 + -
4 4 + 4 .4 + +
4 4 + 4 +
4 4 + 4 + .4 -
4 4 + 4 + .4 +
4 4 + 4 + 4 -
4 4 + 4 + 4 +
4 4 + 4 4 - -
4 4 + 4 4 - +
4 4 + 4 4 + -
4 4 + 4 4 + +
4 4 4 - -
4 4 4 - - .4 -
4 4 4 - - .4 +
4 4 4 - - 4 -
4 4 4 - - 4 +
4 4 4 - .4 - -
4 4 4 - .4 - +
4 4 4 - .4 + -
4 4 4 - .4 + +
4 4 4 - +
4 4 4 - + .4 -
4 4 4 - + .4 +
4 4 4 - + 4 -
4 4 4 - + 4 +
4 4 4 - 4 - -
4 4 4 - 4 - +
4 4 4 - 4 + -
4 4 4 - 4 + +
4 4 4 .4 - - -
4 4 4 .4 - - +
4 4 4 .4 - + -
4 4 4 .4 - + +
4 4 4 .4 + - -
4 4 4 .4 + - +
4 4 4 .4 + + -
4 4 4 .4 + + +
4 4 4 + -
4 4 4 + - .4 -
4 4 4 + - .4 +
4 4 4 + - 4 -
4 4 4 + - 4 +
4 4 4 + .4 - -
4 4 4 + .4 - +
4 4 4 + .4 + -
4 4 4 + .4 + +
4 4 4 + +
4 4 4 + + .4 -
4 4 4 + + .4 +
4 4 4 + + 4 -
4 4 4 + + 4 +
4 4 4 + 4 - -
4 4 4 + 4 - +
4 4 4 + 4 + -
4 4 4 + 4 + +
4 4 4 4 - - -
4 4 4 4 - - +
4 4 4 4 - + -
4 4 4 4 - + +
4 4 4 4 + - -
4 4 4 4 + - +
4 4 4 4 + + -
4 4 4 4 + + +";

            ExpressionSearch search = new ExpressionSearch();
            search.AddOperand("4");
            search.AddOperand(".4");
            search.AddBinary("+");
            search.AddBinary("-");

            TestSearch(search, Expected);
        }

        private static void TestSearch(ExpressionSearch search, string expected)
        {
            List<string> expressions = new List<string>();

            search.Run(e => expressions.Add(e.ToString()));

            expressions.Sort();
            string.Join(Environment.NewLine, expressions).Should().Be(expected);
        }
    }
}
